name: Build Cross-Platform Binaries

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux AMD64
          - os: ubuntu-latest
            arch: x64
            platform: linux
            target: x86_64-unknown-linux-gnu
          # Linux ARM64
          - os: ubuntu-latest
            arch: arm64
            platform: linux
            target: aarch64-unknown-linux-gnu
          # macOS AMD64
          - os: macos-latest
            arch: x64
            platform: darwin
            target: x86_64-apple-darwin
          # macOS ARM64 (M1/M2)
          - os: macos-14
            arch: arm64
            platform: darwin
            target: aarch64-apple-darwin
          # Windows AMD64
          - os: windows-latest
            arch: x64
            platform: windows
            target: x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build binary
      run: |
        pyinstaller aznuke.spec --distpath dist --name aznuke-${{ matrix.platform }}-${{ matrix.arch }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: aznuke-${{ matrix.platform }}-${{ matrix.arch }}
        path: dist/aznuke-${{ matrix.platform }}-${{ matrix.arch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          aznuke-*/aznuke-*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 